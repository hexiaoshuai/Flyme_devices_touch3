.method public isVoiceMailNumber(Landroid/telecom/PhoneAccountHandle;Ljava/lang/String;)Z
    .locals 1

    .prologue
    invoke-direct {p0}, Lcom/android/server/telecom/TelecomServiceImpl;->enforceModifyPermissionOrDefaultDialer()V

    :try_start_0
    iget-object v0, p0, Lcom/android/server/telecom/TelecomServiceImpl;->mPhoneAccountRegistrar:Lcom/android/server/telecom/PhoneAccountRegistrar;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/telecom/PhoneAccountRegistrar;->isVoiceMailNumber(Landroid/telecom/PhoneAccountHandle;Ljava/lang/String;)Z
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    move-result v0

    return v0

    :catch_0
    move-exception v0

    throw v0
.end method

.method public getLine1Number(Landroid/telecom/PhoneAccountHandle;)Ljava/lang/String;
    .locals 2

    .prologue
    invoke-direct {p0}, Lcom/android/server/telecom/TelecomServiceImpl;->enforceModifyPermissionOrDefaultDialer()V

    :try_start_0
    iget-object v0, p0, Lcom/android/server/telecom/TelecomServiceImpl;->mPhoneAccountRegistrar:Lcom/android/server/telecom/PhoneAccountRegistrar;

    invoke-virtual {v0, p1}, Lcom/android/server/telecom/PhoneAccountRegistrar;->getSubscriptionIdForPhoneAccount(Landroid/telecom/PhoneAccountHandle;)I

    move-result v0

    invoke-direct {p0}, Lcom/android/server/telecom/TelecomServiceImpl;->getTelephonyManager()Landroid/telephony/TelephonyManager;

    move-result-object v1

    invoke-virtual {v1, v0}, Landroid/telephony/TelephonyManager;->getLine1NumberForSubscriber(I)Ljava/lang/String;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v0

    return-object v0

    :catch_0
    move-exception v0

    throw v0
.end method

.method public hasVoiceMailNumber(Landroid/telecom/PhoneAccountHandle;)Z
    .locals 2

    .prologue
    const/4 v0, 0x0

    invoke-direct {p0}, Lcom/android/server/telecom/TelecomServiceImpl;->enforceModifyPermissionOrDefaultDialer()V

    :try_start_0
    invoke-direct {p0, p1}, Lcom/android/server/telecom/TelecomServiceImpl;->getVoiceMailNumberInternal(Landroid/telecom/PhoneAccountHandle;)Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    move-result v1

    if-nez v1, :cond_0

    const/4 v0, 0x1

    :cond_0
    return v0

    :catch_0
    move-exception v1

    throw v1
.end method

.method public getVoiceMailNumber(Landroid/telecom/PhoneAccountHandle;)Ljava/lang/String;
    .locals 1

    .prologue
    :try_start_0
    invoke-direct {p0, p1}, Lcom/android/server/telecom/TelecomServiceImpl;->getVoiceMailNumberInternal(Landroid/telecom/PhoneAccountHandle;)Ljava/lang/String;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v0

    return-object v0

    :catch_0
    move-exception v0

    throw v0
.end method

.method private getVoiceMailNumberInternal(Landroid/telecom/PhoneAccountHandle;)Ljava/lang/String;
    .locals 2

    .prologue
    iget-object v0, p0, Lcom/android/server/telecom/TelecomServiceImpl;->mPhoneAccountRegistrar:Lcom/android/server/telecom/PhoneAccountRegistrar;

    invoke-virtual {v0, p1}, Lcom/android/server/telecom/PhoneAccountRegistrar;->getSubscriptionIdForPhoneAccount(Landroid/telecom/PhoneAccountHandle;)I

    move-result v0

    invoke-direct {p0}, Lcom/android/server/telecom/TelecomServiceImpl;->getTelephonyManager()Landroid/telephony/TelephonyManager;

    move-result-object v1

    invoke-virtual {v1, v0}, Landroid/telephony/TelephonyManager;->getVoiceMailNumber(I)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getAdnUriForPhoneAccount(Landroid/telecom/PhoneAccountHandle;)Landroid/net/Uri;
    .locals 5

    .prologue
    invoke-direct {p0}, Lcom/android/server/telecom/TelecomServiceImpl;->enforceModifyPermissionOrDefaultDialer()V

    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    const-string v0, "content://icc/adn/"

    :try_start_0
    iget-object v1, p0, Lcom/android/server/telecom/TelecomServiceImpl;->mPhoneAccountRegistrar:Lcom/android/server/telecom/PhoneAccountRegistrar;

    invoke-virtual {v1, p1}, Lcom/android/server/telecom/PhoneAccountRegistrar;->getSubscriptionIdForPhoneAccount(Landroid/telecom/PhoneAccountHandle;)I

    move-result v1

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v4, "subId/"

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v0

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    invoke-static {v0}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v0

    return-object v0

    :catchall_0
    move-exception v0

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method public getActiveSubscription()I
    .locals 1

    .prologue
    const/4 v0, 0x0

    return v0
.end method

.method public switchToOtherActiveSub(I)V
    .locals 0

    .prologue
    return-void
.end method
